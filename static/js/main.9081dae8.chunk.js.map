{"version":3,"sources":["pages/AboutPage/AboutPage.js","utils.js","WebAPI.js","contexts.js","pages/LoginPage/LoginPage.js","pages/RegisterPage/RegisterPage.js","redux/reducers/postReducer.js","pages/HomePage/HomePage.js","pages/PostPage/PostPage.js","pages/NewPostPage/NewPostPage.js","pages/EditPostPage/EditPostPage.js","components/Header/Header.js","components/App/App.js","components/App/index.js","redux/store.js","index.js"],"names":["Root","styled","div","PostContainer","PostTitle","AboutContent","SomeArea","SomeText","Post","content","PostPage","TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","getMe","fetch","headers","authorization","then","res","json","AuthContext","createContext","Form","form","Title","Username","Password","Button","button","ErrorMessage","LoginPage","setUser","useContext","useState","username","setUsername","password","setPassword","errorMessage","setErrorMessage","history","useHistory","onSubmit","method","body","JSON","stringify","login","data","ok","message","response","toString","push","value","onChange","e","target","type","Nickname","nickname","setNickname","register","postReducer","createSlice","name","initialState","isLoadingPost","post","posts","newPostResponse","deleteResponse","editPostResponse","reducers","setIsLoadingPost","state","action","payload","setPost","setPosts","setNewPostResponse","setDeleteResponse","setEditPostResponse","actions","setIsLoadingNewPost","getPost","id","dispatch","postId","catch","err","console","log","getPosts","page","getPostsAPI","newPost","title","postNew","deletePost","removePost","editPost","editPostAPI","PostList","Link","PostDate","Banner","BannerTitle","BannerContent","Pagination","PageButton","props","prev","to","Date","createdAt","toLocaleString","HomePage","setPage","useDispatch","useSelector","store","useEffect","map","onClick","length","TitleArea","PostContent","Buttons","DeleteButton","onDelete","onEdit","useParams","Textarea","textarea","setTitle","setBody","NewPostPage","EditPostPage","HeaderContainer","Brand","NavbarList","Nav","$active","Header","location","useLocation","user","pathname","App","isLoading","setIsLoading","Provider","exact","path","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9081dae8.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Root = styled.div`\n  padding: 20px 70px;\n`;\n\nconst PostContainer = styled.div`\n  width: 100%;\n  height: 80px;\n  align-items: flex-end;\n  justify-content: space-between;\n`;\n\nconst PostTitle = styled.div`\n  width: 100%;\n  font-size: 72px;\n  padding: 50px 0;\n  font-weight: 600;\n  color: rgba(0, 0, 0, 0.9);\n  text-decoration: none;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.9);\n  text-align: center;\n`;\n\nconst AboutContent = styled.div`\n  display: block;\n  color: rgba(0, 0, 0, 0.8);\n  width: 50%;\n  border-right: 1px solid rgba(0, 0, 0, 0.9);\n  font-size: 28px;\n  padding: 30px;\n`;\nconst SomeArea = styled.div`\n  font-size: 72px;\n  color: rgba(0, 0, 0, 0.9);\n  background-color: #9bffbc;\n  border-top: 1px solid rgba(0, 0, 0, 0.9);\n  padding: 30px;\n  text-align: center;\n`;\n\nconst SomeText = styled.div`\n  font-size: 20px;\n  padding: 10px 25%;\n  text-align: justify;\n`;\n\nfunction Post() {\n  const content = `\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \n  `;\n  return (\n    <PostContainer>\n      <PostTitle>Every idea needs a Large medium.</PostTitle>\n      <AboutContent>\n        {content}\n        <br />\n        <br />\n        {content}\n      </AboutContent>\n      <SomeArea>\n        A faking network\n        <br />\n        of no one.\n        <SomeText>{content}</SomeText>\n      </SomeArea>\n    </PostContainer>\n  );\n}\n\nexport default function PostPage() {\n  return (\n    <Root>\n      <Post />\n    </Root>\n  );\n}\n","const TOKEN_NAME = \"token\";\n\nexport const setAuthToken = token => localStorage.setItem(TOKEN_NAME, token);\n\nexport const getAuthToken = () => localStorage.getItem(TOKEN_NAME);\n","import { getAuthToken } from './utils';\n\nconst BASE_URL = 'https://student-json-api.lidemy.me';\n\nexport const getPostsAPI = (page) => fetch(`${BASE_URL}/posts?_page=${page}&_limit=6&_sort=createdAt&_order=desc`).then(res => res.json());\n\nexport const getPostAPI = (postId) => fetch(`${BASE_URL}/posts/${postId}`).then(res => res.json());\n\n \nexport const login = (username, password) => fetch(`${BASE_URL}/login`, {\n  method: 'POST',\n  headers: {\n    'content-type': 'application/json',\n  },\n  body: JSON.stringify({\n    username,\n    password,\n  }),\n}).then(res => res.json());\n\nexport const register = (nickname, username, password) => fetch(`${BASE_URL}/register`, {\n  method: 'POST',\n  headers: {\n    'content-type': 'application/json',\n  },\n  body: JSON.stringify({\n    nickname,\n    username,\n    password,\n  }),\n}).then(res => res.json())\n\n\nexport const getMe = () => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  }).then(res => res.json());\n};\n\nexport const postNew = (title, body) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts`, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json',\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    }),\n  }).then(res => res.json());\n};\n\nexport const removePost = (postId) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts/${postId}`, {\n    method: 'DELETE',\n    headers: {\n      'content-type': 'application/json',\n      authorization: `Bearer ${token}`,\n    },\n  }).then(res => res.json());\n};\n\nexport const editPostAPI = (postId, title, body) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts/${postId}`, {\n    method: 'PATCH',\n    headers: {\n      'content-type': 'application/json',\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    }),\n  }).then(res => res.json());\n};","import { createContext } from 'react';\n\nconst AuthContext = createContext(null);\n\nexport default AuthContext;\n","import React, { useState, useContext } from 'react';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport { login, getMe } from '../../WebAPI';\nimport { setAuthToken } from '../../utils';\nimport AuthContext from '../../contexts';\n\nconst Form = styled.form`\n  border: 1px solid rgba(0, 0, 0, 0.5);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 500px;\n  height: 400px;\n  margin: 50px;\n`;\n\nconst Title = styled.div`\n  font-size: 24px;\n  margin: 20px 0;\n`;\n\nconst Username = styled.div`\n  margin-bottom: 20px;\n`;\nconst Password = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst Button = styled.button`\n  background-color: #fff;\n  border: 1px solid #ccc;\n  font-size: 18px;\n  margin-top: 40px;\n  padding: 10px 20px;\n  cursor: pointer;\n`;\n\nconst ErrorMessage = styled.div`\n  color: rgba(225, 0, 0, 0.5);\n  font-weight: 600;\n`;\n\nexport default function LoginPage() {\n  const { setUser } = useContext(AuthContext);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState();\n  const history = useHistory();\n\n  const handleSubmit = () => {\n    setErrorMessage(null);\n    login(username, password).then((data) => {\n      if (data.ok === 0) {\n        return setErrorMessage(data.message);\n      }\n      setAuthToken(data.token);\n\n      getMe().then((response) => {\n        if (response.ok !== 1) {\n          setAuthToken(null);\n          return setErrorMessage(response.toString());\n        }\n        setUser(response.data);\n        history.push('/');\n        return null;\n      });\n      return null;\n    });\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Title>Welcome Back</Title>\n      <Username>\n        Username:\n        {''}\n        <input value={username} onChange={e => setUsername(e.target.value)} />\n      </Username>\n      <Password>\n        Password:\n        {''}\n        <input\n          type=\"password\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n        />\n      </Password>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      <Button>Login</Button>\n    </Form>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport { register, getMe } from '../../WebAPI';\nimport { setAuthToken } from '../../utils';\nimport AuthContext from '../../contexts';\n\nconst Form = styled.form`\n  border: 1px solid rgba(0, 0, 0, 0.5);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 500px;\n  height: 400px;\n  margin: 50px;\n`;\n\nconst Title = styled.div`\n  font-size: 24px;\n  margin: 20px 0;\n`;\n\nconst Nickname = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst Username = styled.div`\n  margin-bottom: 20px;\n`;\nconst Password = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst Button = styled.button`\n  background-color: #fff;\n  border: 1px solid #ccc;\n  font-size: 18px;\n  margin-top: 40px;\n  padding: 10px 20px;\n  cursor: pointer;\n`;\n\nconst ErrorMessage = styled.div`\n  color: rgba(225, 0, 0, 0.5);\n  font-weight: 600;\n`;\n\nexport default function LoginPage() {\n  const { setUser } = useContext(AuthContext);\n  const [nickname, setNickname] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState();\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    setErrorMessage(null);\n    register(nickname, username, password).then((data) => {\n      if (data.ok === 0) {\n        return setErrorMessage(data.message);\n      }\n      setAuthToken(data.token);\n\n      getMe().then((response) => {\n        if (response.ok !== 1) {\n          setAuthToken(null);\n          return setErrorMessage(response.toString());\n        }\n        setUser(response.data);\n        history.push('/');\n        return null;\n      });\n      return null;\n    });\n    return null;\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Title>Join Large</Title>\n      <Nickname>\n        Nickname:\n        {''}\n        <input value={nickname} onChange={e => setNickname(e.target.value)} />\n      </Nickname>\n      <Username>\n        Username:\n        {''}\n        <input value={username} onChange={e => setUsername(e.target.value)} />\n      </Username>\n      <Password>\n        Password:\n        {''}\n        <input\n          type=\"password\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n        />\n      </Password>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      <Button>Join</Button>\n    </Form>\n  );\n}\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { getPostAPI, getPostsAPI, postNew, removePost, editPostAPI } from '../../WebAPI';\r\n\r\n\r\nexport const postReducer = createSlice({\r\n  name: 'posts',\r\n  initialState: {\r\n    isLoadingPost: false,\r\n    post: null,\r\n    posts: [],\r\n    newPostResponse: null,\r\n    deleteResponse: null,\r\n    editPostResponse: null,\r\n  },\r\n  reducers: {\r\n    setIsLoadingPost: (state, action) => {\r\n      state.isLoadingPost = action.payload;\r\n    },\r\n\r\n    setPost: (state, action) => {\r\n      state.post = action.payload;\r\n    },\r\n\r\n    setPosts: (state, action) => {\r\n      state.posts = action.payload\r\n    },\r\n\r\n    setNewPostResponse: (state, action) => {\r\n      state.newPostResponse = action.payload;\r\n    },\r\n\r\n    setDeleteResponse: (state, action) => {\r\n      state.deleteResponse = action.payload;\r\n    },\r\n\r\n    setEditPostResponse: (state, action) => {\r\n      state.editPostResponse = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { \r\n  setIsLoadingPost, \r\n  setPost, \r\n  setPosts, \r\n  setNewPostResponse, \r\n  setIsLoadingNewPost, \r\n  setDeleteResponse, \r\n  setEditPostResponse\r\n} = postReducer.actions;\r\n\r\nexport const getPost = (id) => (dispatch) => {\r\n  dispatch(setIsLoadingPost(true))\r\n  getPostAPI(id).then(res => {\r\n    dispatch(setPost(res));\r\n    dispatch(setIsLoadingPost(false));\r\n  }).catch((err) => {\r\n    console.log(err)\r\n  })\r\n};\r\n\r\nexport const getPosts = (page) => (dispatch) => {\r\n  getPostsAPI(page).then(res => {\r\n    dispatch(setPosts(res))\r\n  }).catch((err) => {\r\n    console.log(err)\r\n  })\r\n}\r\n\r\n// 呼叫 api, 把結果設到 newPostResponse\r\nexport const newPost = (title, body) => (dispatch) => {\r\n  // 回傳一個 promise，就可以在 handleSubmit dispatch 之後用 .then()\r\n  return postNew(title, body).then((res) => {\r\n    dispatch(setNewPostResponse(res))\r\n    return res\r\n  });\r\n}\r\n\r\nexport const deletePost = (id) => (dispatch) => {\r\n  return removePost(id).then((res) => {\r\n    dispatch(setDeleteResponse(res))\r\n  })\r\n};\r\n\r\nexport const editPost = (id, title, body) => (dispatch) => {\r\n  dispatch(setIsLoadingPost(true))\r\n  editPostAPI(id, title, body).then((res) => {\r\n    dispatch(setEditPostResponse(res))\r\n    dispatch(setIsLoadingPost(false))\r\n  })\r\n}\r\n\r\n\r\nexport default postReducer.reducer;\r\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPosts } from '../../redux/reducers/postReducer';\n\nconst Root = styled.div`\n  margin: 0px;\n  padding: 0 40px;\n  box-sizing: border-box;\n`;\n\nconst PostList = styled.div`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0 auto;\n`;\n\nconst PostContainer = styled.div`\n  width: calc((100% - 120px) / 3);\n  height: 100px;\n  align-items: flex-end;\n  margin: 20px;\n  border-bottom: solid 1px rgba(0, 0, 0, 0.3);\n  &:hover {\n    box-shadow: 0 8px 6px -6px rgba(0, 0, 0, 0.3);\n  }\n`;\n\nconst PostTitle = styled(Link)`\n  font-size: 20px;\n  padding: 10px 0;\n  font-weight: 600;\n  color: rgba(0, 0, 0, 0.8);\n  text-decoration: none;\n`;\n\nconst PostDate = styled.div`\n  display: block;\n  color: rgba(0, 0, 0, 0.3);\n`;\n\nconst Banner = styled.div`\n  top: -30px;\n  background-color: #fff;\n  padding: 50px 40px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.5);\n  box-sizing: border-box;\n  margin-bottom: 40px;\n`;\nconst BannerTitle = styled.div`\n  color: color: rgba(0, 0, 0, 0.8);\n  font-size: 72px;\n  letter-spacing: -1px;\n  line-height: 0.8;\n`;\n\nconst BannerContent = styled.div`\n  color: color: rgba(0, 0, 0, 0.8);\n  margin-top: 40px;\n  font-size: 20px;\n  width: 40%;\n`;\n\nconst Pagination = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 50px auto;\n`;\n\nconst PageButton = styled.div`\n  text-align: center;\n  font-size: 16px;\n  font-weight: 600;\n  width: 36px;\n  height: 36px;\n  border: solid 1px #3333332b;\n  color: #333;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 20px;\n  ${props => props.prev\n    && `\n      border-radius: 0px;\n      border: none;\n      transition: 0.5s;\n      cursor: pointer;\n      &:hover {\n        background-color: #fff;\n        color: #333;\n        border-bottom: 1px solid #333;\n      }\n    `}\n`;\n\nfunction Post({ post }) {\n  return (\n    <PostContainer>\n      <PostTitle to={`/posts/${post.id}`}>\n        {post.title}\n      </PostTitle>\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n    </PostContainer>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.objectOf(PropTypes.object).isRequired,\n};\n\nexport default function HomePage() {\n  const [page, setPage] = useState(1);\n  const dispatch = useDispatch();\n  const posts = useSelector(store => store.posts.posts)\n\n  const handlePrevClick = () => {\n    setPage(page - 1);\n  };\n\n  const handleNextClick = () => {\n    setPage(page + 1);\n  };\n\n  useEffect(() => {\n    dispatch(getPosts(page));\n  }, [page, dispatch]);\n\n  return (\n    <Root>\n      <Banner>\n        <BannerTitle>\n          Without any\n          <br />\n          perspectives\n        </BannerTitle>\n        <BannerContent>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua.\n        </BannerContent>\n      </Banner>\n      <PostList>\n        {posts.map((post) => (\n          <Post key={post.id} post={post} />\n        ))}\n      </PostList>\n      <Pagination>\n        {page !== 1\n          && (\n          <PageButton prev onClick={handlePrevClick}>\n            Prev\n          </PageButton>\n        )}\n        <PageButton>{page}</PageButton>\n        {posts.length === 6\n          && (\n          <PageButton prev onClick={handleNextClick}>\n            Next\n          </PageButton>\n        )}\n      </Pagination>\n    </Root>\n  );\n}\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPost, deletePost, editPost } from '../../redux/reducers/postReducer';\nimport { removePost } from '../../WebAPI'\n\nconst Root = styled.div`\n  padding: 70px;\n`;\n\nconst PostContainer = styled.div`\n  width: 70%;\n  height: 80px;\n  align-items: flex-end;\n  justify-content: space-between;\n`;\n\nconst TitleArea = styled.div`\n  display: flex;\n  justify-content: space-between;\n`\nconst PostTitle = styled.div`\n  font-size: 24px;\n  padding: 10px 0;\n  font-weight: 600;\n  color: rgba(0, 0, 0, 0.8);\n  text-decoration: none;\n`;\n\nconst PostDate = styled.div`\n  display: block;\n  color: rgba(0, 0, 0, 0.3);\n`;\n\nconst PostContent = styled.div`\n  margin-top: 20px;\n  line-height: 1.5;\n`;\n\nconst Buttons = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`\n\nconst Button = styled.button`\n  font-size: 14px;\n  color: #333;\n  background-color: #fff;\n  margin-top: 10px;\n  padding: 10px 20px;\n  text-shadow: none;\n  border-style: none;\n  border: 1px solid #333;\n  display: inline-block;\n  margin: 10px;\n  cursor: pointer;\n`;\n\nconst DeleteButton = styled(Button)`\n  background-color: #DC4525;\n  color: #fff;\n  border: none;\n`\n\nfunction Post({ post, onDelete, onEdit }) {\n  if (!post) return null;\n  return (\n    <PostContainer>\n      <TitleArea>\n        <PostTitle>{post.title}</PostTitle>\n        <Buttons>\n          <Button onClick={onEdit}>編輯</Button>\n          <DeleteButton onClick={onDelete}>刪除</DeleteButton>\n        </Buttons>\n      </TitleArea>\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n      <PostContent>{post.body}</PostContent>\n      \n    </PostContainer>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.objectOf(PropTypes.object).isRequired,\n};\n\nexport default function PostPage() {\n  const history = useHistory();\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const isLoading = useSelector(store => store.posts.isLoadingPost);\n  const post = useSelector(store => store.posts.post)\n  const editPostResponse = useSelector(store => store.posts.editPostResponse);\n\n  const handleDelete = () => {\n    dispatch(deletePost(id)).then(() => {\n      history.push('/')\n    })\n  }\n\n  const handleEdit = () => {\n    history.push(`/edit-post/${post.id}`)\n  }\n\n  useEffect(() => {\n    dispatch(getPost(id))\n  }, [id, dispatch, editPostResponse]); // dispatch 為甚麼要加入 dependency\n\n\n  return (\n    <Root>\n      <Post post={post} onDelete={handleDelete} onEdit={handleEdit}/>\n    </Root>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAuthToken } from '../../utils';\nimport { newPost } from '../../redux/reducers/postReducer';\n\nconst Root = styled.div`\n  padding: 20px 70px;\n`;\n\nconst PostContainer = styled.form`\n  width: 70%;\n  height: 80px;\n`;\n\nconst PostTitle = styled.div`\n  font-size: 18px;\n  padding: 10px 0;\n  color: rgba(0, 0, 0, 0.8);\n  text-decoration: none;\n  & input {\n    width: 60%;\n    height: 30px;\n  }\n`;\n\nconst PostContent = styled.div`\n  margin-top: 20px;\n`;\n\nconst Textarea = styled.textarea`\n  width: 100%;\n  height: 260px;\n  margin-top: 10px;\n`;\n\nconst Button = styled.button`\n  font-size: 14px;\n  color: #333;\n  background-color: #fff;\n  margin-top: 10px;\n  padding: 10px 20px;\n  text-shadow: none;\n  border-style: none;\n  border: 1px solid #333;\n  display: block;\n  float: right;\n`;\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nfunction Post() {\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [errorMessage, setErrorMessage] = useState();\n  const token = getAuthToken();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const newPostResponse = useSelector((store) => store.posts.newPostResponse)\n\n  const handleSubmit = () => {\n    setErrorMessage(null);\n    if (token) {\n      if (!title || !body) {\n        setErrorMessage('Please fill the empty area.');\n      } else {\n        dispatch(newPost(\n          title, \n          body\n        )).then(newPostResponse => {\n          if (newPostResponse && newPostResponse.id) {\n            history.push(\"/posts/\" + newPostResponse.id)\n          }\n        })\n      }\n    }\n  };\n\n  return (\n    <PostContainer onSubmit={handleSubmit}>\n      <PostTitle>\n        Title：\n        {''}\n        <input value={title} onChange={e => setTitle(e.target.value)} />\n      </PostTitle>\n      <PostContent>New Post： </PostContent>\n      <Textarea value={body} onChange={e => setBody(e.target.value)} />\n      <Button>Submit</Button>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </PostContainer>\n  );\n}\n\nexport default function NewPostPage() {\n  const token = getAuthToken();\n  const history = useHistory();\n  if (!token) {\n    history.push('/');\n  }\n  return (\n    <Root>\n      <Post />\n    </Root>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAuthToken } from '../../utils';\nimport { getPost, editPost } from '../../redux/reducers/postReducer';\n\nconst Root = styled.div`\n  padding: 20px 70px;\n`;\n\nconst PostContainer = styled.form`\n  width: 70%;\n  height: 80px;\n`;\n\nconst PostTitle = styled.div`\n  font-size: 18px;\n  padding: 10px 0;\n  color: rgba(0, 0, 0, 0.8);\n  text-decoration: none;\n  & input {\n    width: 60%;\n    height: 30px;\n  }\n`;\n\nconst PostContent = styled.div`\n  margin-top: 20px;\n`;\n\nconst Textarea = styled.textarea`\n  width: 100%;\n  height: 260px;\n  margin-top: 10px;\n`;\n\nconst Button = styled.button`\n  font-size: 14px;\n  color: #333;\n  background-color: #fff;\n  margin-top: 10px;\n  padding: 10px 20px;\n  text-shadow: none;\n  border-style: none;\n  border: 1px solid #333;\n  display: block;\n  float: right;\n`;\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nexport default function EditPostPage() {\n  const [errorMessage, setErrorMessage] = useState();\n  const token = getAuthToken();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { id } = useParams();\n  const post = useSelector(store => store.posts.post);\n  const editPostResponse = useSelector(store => store.posts.editPostResponse);\n  const [title, setTitle] = useState(post.title);\n  const [body, setBody] = useState(post.body);\n\n\n  if (!token) {\n    history.push('/');\n  } \n  \n  console.log(title, body)\n\n  const handleSave = () => {\n    dispatch(editPost(id, title, body))\n    history.push(`/posts/${id}`)\n  };\n\n  useEffect(() => {\n    dispatch(getPost(id))\n  }, []);\n\n  return (\n    <Root>\n      <PostContainer>\n        <PostTitle>\n          Title：\n          <input value={title} type=\"text\" onChange={e => setTitle(e.target.value)} />\n        </PostTitle>\n        <PostContent>Post：</PostContent>\n        <Textarea onChange={e => setBody(e.target.value)} >{body}</Textarea>\n        <Button onClick={handleSave} >Save</Button>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      </PostContainer>\n    </Root>\n  );\n}\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { Link, useLocation, useHistory } from 'react-router-dom';\nimport AuthContext from '../../contexts';\nimport { setAuthToken } from '../../utils';\n\nconst HeaderContainer = styled.div`\n  height: 100px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  padding: 0px 70px;\n  background-color: #fff;\n  box-sizing: border-box;\n`;\n\nconst Brand = styled(Link)`\n  color: black;\n  font-size: 32px;\n  text-decoration: none;\n`;\n\nconst NavbarList = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Nav = styled(Link)`\n  padding: 10px 20px;\n  margin-right: 10px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  color: black;\n  text-decoration: none;\n\n  ${props => props.$active \n    && `\n      text-decoration: underline rgba(0, 0, 0, 0.2);\n    `}\n\n  ${props => props.register \n    && `\n      border-radius: 6px;\n      background-color: rgba(84, 131, 215, 1);\n      color: #fff;\n      transition: 0.5s;\n\n      &:hover {\n        background-color: #6C9BED;\n      }\n    `}\n`;\n\nexport default function Header() {\n  const location = useLocation();\n  const history = useHistory();\n  const { user, setUser } = useContext(AuthContext);\n\n  const handleLogout = () => {\n    setAuthToken('');\n    setUser(null);\n    if (location.pathname !== '/') {\n      history.push('/');\n    }\n  };\n\n  return (\n    <HeaderContainer>\n      <div>\n        <Brand to=\"/\" $active={location.pathname === '/'}>\n          Large\n        </Brand>\n      </div>\n      <NavbarList>\n        <Nav to=\"/\" $active={location.pathname === '/'}>\n          Home\n        </Nav>\n        <Nav to=\"/about\" $active={location.pathname === '/about'}>\n          About\n        </Nav>\n        {user && (\n          <Nav to=\"/new-post\" $active={location.pathname === '/new-post'}>\n            Post Story\n          </Nav>\n        )}\n        {user && <Nav onClick={handleLogout}>Logout</Nav>}\n        {!user && (\n          <Nav to=\"/login\" $active={location.pathname === '/login'}>\n            Login\n          </Nav>\n        )}\n        {!user && (\n          <Nav to=\"/register\" register>\n            Get Started\n          </Nav>\n        )}\n      </NavbarList>\n    </HeaderContainer>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport AboutPage from '../../pages/AboutPage';\nimport LoginPage from '../../pages/LoginPage';\nimport RegisterPage from '../../pages/RegisterPage';\nimport HomePage from '../../pages/HomePage';\nimport PostPage from '../../pages/PostPage';\nimport NewPostPage from '../../pages/NewPostPage';\nimport EditPostPage from '../../pages/EditPostPage';\nimport Header from '../Header';\nimport AuthContext from '../../contexts';\nimport { getMe } from '../../WebAPI';\nimport { getAuthToken } from '../../utils';\n\nconst Root = styled.div`\n  padding-top: 100px;\n`;\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const token = getAuthToken();\n\n  // 有 TOKEN 才 CALL API\n  useEffect(() => {\n    if (token) {\n      setIsLoading(true);\n      getMe().then((response) => {\n        if (response.ok) {\n          setUser(response.data);\n          setIsLoading(false);\n        }\n      });\n    } \n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user, setUser }}>\n      <Root>\n        <Router>\n          {!isLoading && <Header />}\n          <Switch>\n            <Route exact path=\"/\">\n              <HomePage />\n            </Route>\n            <Route exact path=\"/about\">\n              <AboutPage />\n            </Route>\n            <Route exact path=\"/login\">\n              <LoginPage />\n            </Route>\n            <Route exact path=\"/register\">\n              <RegisterPage />\n            </Route>\n            <Route exact path=\"/posts/:id\">\n              <PostPage />\n            </Route>\n            <Route exact path=\"/new-post\">\n              <NewPostPage />\n            </Route>\n            <Route exact path=\"/edit-post/:id\">\n              <EditPostPage />\n            </Route>\n          </Switch>\n        </Router>\n      </Root>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import App from \"./App\";\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\nimport postReducer from './reducers/postReducer';\n// import userReducer from './reducers/userReducer';\n\nexport default configureStore({\n  reducer: {\n    posts: postReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store'\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<React.StrictMode>\n    \t<App />\n  \t</React.StrictMode>\n\t</Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}